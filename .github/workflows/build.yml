name: build & push

on:
  push:
    branches: [ master, dev ]
  pull_request:
    branches: [ master, dev ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: setup go
        uses: actions/setup-go@v3
        with:
          go-version: '1.17'
          cache: true

      - name: Get branch name (merge)
        if: github.event_name != 'pull_request'
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | tr / -)" >> $GITHUB_ENV

      - name: Get branch name (pull request)
        if: github.event_name == 'pull_request'
        run: |
          git fetch -a
          echo "BRANCH_NAME=$(echo ${GITHUB_HEAD_REF} | tr / -)" >> $GITHUB_ENV

      - name: Build binary
        run: |
          make build

      - name: Build docker image
        run: |
          COMMIT_COUNT=$(git rev-list --count HEAD)
          SHORT_HASH=$(git rev-parse --short HEAD)
          VERSION=${{ env.BRANCH_NAME }}-${COMMIT_COUNT}-${SHORT_HASH}

          if [[ ${{ env.BRANCH_NAME }} == "master" ]]; then
            export VERSION=$(<version.txt)
          fi

          if [[ ${{ env.BRANCH_NAME }} == "dev" ]]; then
            export VERSION=dev
          fi

          make image VERSION=$VERSION

      - name: run test    
        run: |
          go test -v -cover -covermode=atomic -coverprofile=coverage.txt ./...
          bash <(curl -s https://codecov.io/bash) -F unit

      - name: Scan The Image
        run: |
          REPO=policy-agent
          COMMIT_COUNT=$(git rev-list --count HEAD)
          SHORT_HASH=$(git rev-parse --short HEAD)
          VERSION=${{ env.BRANCH_NAME }}-${COMMIT_COUNT}-${SHORT_HASH}
          if [[ ${{ env.BRANCH_NAME }} == "master" ]]; then
            export VERSION=$(<version.txt)
          fi
          if [[ ${{ env.BRANCH_NAME }} == "dev" ]]; then
            export VERSION=dev
          fi

          echo scanning ${REPO}:${VERSION}
          curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sudo sh -s -- -b /usr/local/bin
          grype "${REPO}:${VERSION}" --scope all-layers > /tmp/report.txt #--fail-on high to fail on sev high

      - name: Release and push to Docker Registry
        if: ${{ github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev' }}
        run: |
          docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
          if [[ ${{ env.BRANCH_NAME }} == "master" ]]; then
            export VERSION=$(<version.txt)
            git config user.email "release-ci@weave.works"
            git config user.name "release-ci"
            git tag -a v$VERSION -m "Policy Agent v$VERSION release" 
            git push -u origin v$VERSION
          fi

          if [[ ${{ env.BRANCH_NAME }} == "dev" ]]; then
            export VERSION=dev
          fi

          make push@magalixcorp tag-file=new-tag version-file=new-version VERSION=$VERSION
