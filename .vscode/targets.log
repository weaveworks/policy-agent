make all --print-data-base --no-builtin-variables --no-builtin-rules --question
# GNU Make 4.3
# Built for x86_64-pc-linux-gnu
# Copyright (C) 1988-2020 Free Software Foundation, Inc.
# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
# This is free software: you are free to change and redistribute it.
# There is NO WARRANTY, to the extent permitted by law.

# Make data base, printed on Sun Aug 21 16:38:56 2022

# Variables

# environment
GDK_BACKEND = x11
# environment
LC_ALL = C
# environment
NO_AT_BRIDGE = 1
# environment
GNOME_SHELL_SESSION_MODE = ubuntu
# environment
SSH_AGENT_LAUNCHER = gnome-keyring
# environment
SNAP_INSTANCE_KEY = 
# environment
TERMINATOR_DBUS_NAME = net.tenshu.Terminator23558193cd9818af7fe4d2c2f5bd9d00f
# environment
GJS_DEBUG_OUTPUT = stderr
# environment
LC_NAME = en_US.UTF-8
# environment
LC_NUMERIC = en_US.UTF-8
# environment
VSCODE_CWD = /home/waleed/wge/waleed/policy-agent
# environment
WINDOWPATH = 2
# environment
TERMINATOR_UUID = urn:uuid:b569589e-94dd-4f03-be83-cb11871c63fc
# environment
LC_ADDRESS = en_US.UTF-8
# default
MAKE_COMMAND := make
# environment
VSCODE_INJECTION = 1
# environment
QT_ACCESSIBILITY = 1
# environment
VSCODE_GIT_ASKPASS_EXTRA_ARGS = --ms-enable-electron-run-as-node
# environment
GOPATH = /home/waleed/Go
# automatic
@D = $(patsubst %/,%,$(dir $@))
# environment
SNAP_INSTANCE_NAME = code
# environment
GDK_PIXBUF_MODULEDIR = /snap/code/105/usr/lib/x86_64-linux-gnu/gdk-pixbuf-2.0/2.10.0/loaders
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# default
.VARIABLES := 
# environment
PWD = /home/waleed/wge/waleed/policy-agent
# automatic
%D = $(patsubst %/,%,$(dir $%))
# environment
LSCOLORS = Gxfxcxdxbxegedabagacad
# environment
XDG_DATA_DIRS = /usr/share/ubuntu:/usr/share/gnome:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop
# environment
OLDPWD = /home/waleed/wge/waleed
# automatic
^D = $(patsubst %/,%,$(dir $^))
# automatic
%F = $(notdir $%)
# environment
VSCODE_CODE_CACHE_PATH = /home/waleed/.config/Code/CachedData/e4503b30fc78200f846c62cf8091b76ff5547662
# environment
LANG = C
# environment
XAUTHORITY = /run/user/1000/gdm/Xauthority
# default
.LOADED := 
# default
.INCLUDE_DIRS = /usr/local/include /usr/include /usr/include
# makefile
MAKEFLAGS = pqrR
# environment
TERMINATOR_DBUS_PATH = /net/tenshu/Terminator2
# makefile
CURDIR := /home/waleed/wge/waleed/policy-agent
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = true
# automatic
*D = $(patsubst %/,%,$(dir $*))
# makefile (from 'Makefile', line 8)
VERSION = $(shell printf "%s.%s" $$(git rev-list --count HEAD) $$(git rev-parse --short HEAD) )
# environment
MFLAGS = -pqrR
# environment
SSH_AUTH_SOCK = /run/user/1000/keyring/ssh
# makefile (from 'Makefile', line 30)
.SHELLFLAGS = -ec
# environment
GITHUB_USER = waleedhammam
# environment
XDG_CONFIG_DIRS = /etc/xdg/xdg-ubuntu:/etc/xdg
# automatic
+D = $(patsubst %/,%,$(dir $+))
# environment
GIT_ASKPASS = /snap/code/105/usr/share/code/resources/app/extensions/git/dist/askpass.sh
# environment
ZDOTDIR = /home/waleed
# environment
XDG_SESSION_DESKTOP = ubuntu
# makefile (from 'Makefile', line 1)
MAKEFILE_LIST := Makefile
# environment
SNAP_REEXEC = 
# automatic
@F = $(notdir $@)
# environment
ZSH = /home/waleed/.oh-my-zsh
# environment
VSCODE_PID = 456104
# makefile (from 'Makefile', line 13)
BRANCH = $(shell git rev-parse --abbrev-ref HEAD)
# environment
XDG_SESSION_TYPE = x11
# automatic
?D = $(patsubst %/,%,$(dir $?))
# makefile (from 'Makefile', line 160)
PROJECT_DIR := /home/waleed/wge/waleed/policy-agent
# environment
SESSION_MANAGER = local/waleed-Latitude-7490:@/tmp/.ICE-unix/6065,unix/waleed-Latitude-7490:/tmp/.ICE-unix/6065
# automatic
*F = $(notdir $*)
# environment
IBUS_DISABLE_SNOOPER = 1
# environment
CHROME_DESKTOP = code-url-handler.desktop
# makefile (from 'Makefile', line 109)
ignore-not-found = false
# environment
DBUS_SESSION_BUS_ADDRESS = unix:path=/run/user/1000/bus
# automatic
<D = $(patsubst %/,%,$(dir $<))
# makefile (from 'Makefile', line 129)
CONTROLLER_GEN = $(shell pwd)/bin/controller-gen
# environment
VSCODE_NLS_CONFIG = {"locale":"en-us","availableLanguages":{},"_languagePackSupport":true}
# default
MAKE_HOST := x86_64-pc-linux-gnu
# environment
GNOME_DESKTOP_SESSION_ID = this-is-deprecated
# makefile (from 'Makefile', line 29)
SHELL = /usr/bin/env bash -o pipefail
# default
MAKECMDGOALS := all
# environment
XMODIFIERS = @im=ibus
# environment
GITHUB_TOKEN = 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
# environment
GJS_DEBUG_TOPICS = JS ERROR;JS LOG
# environment
SHLVL = 2
# environment
MAKELEVEL := 0
# default
MAKE = $(MAKE_COMMAND)
# environment
SNAP_COOKIE = ggH86ha55DAkeI1LEQH5vMWKojgvvXixo2mCjWTTzyy5fVvz8e5M
# environment
PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin:/usr/local/go/bin:/usr/local/go/bin:/usr/local/protobuf/bin:/home/waleed/Go/bin:/usr/local/go/bin:/usr/local/protobuf/bin:/home/waleed/Go/bin
# makefile (from 'Makefile', line 134)
KUSTOMIZE = $(shell pwd)/bin/kustomize
# default
MAKEFILES := 
# environment
VSCODE_GIT_IPC_HANDLE = /run/user/1000/vscode-git-3e7cad7fcb.sock
# environment
VSCODE_GIT_ASKPASS_NODE = /snap/code/105/usr/share/code/code
# environment
LC_MONETARY = en_US.UTF-8
# automatic
^F = $(notdir $^)
# environment
SNAP_USER_COMMON = /home/waleed/snap/code/common
# makefile (from 'Makefile', line 4)
ENVTEST_K8S_VERSION = 1.23
# environment
LC_TIME = en_US.UTF-8
# environment
VSCODE_GIT_ASKPASS_MAIN = /snap/code/105/usr/share/code/resources/app/extensions/git/dist/askpass-main.js
# environment
SNAP = /snap/code/105
# makefile (from 'Makefile', line 23)
GOBIN = $(shell go env GOBIN)
# environment
INVOCATION_ID = bfa426716b5f4e739be3747009a72d62
# environment
SNAP_REVISION = 105
# environment
SNAP_REAL_HOME = /home/waleed
# environment
USERNAME = waleed
# environment
TERM_PROGRAM = vscode
# environment
LC_TELEPHONE = en_US.UTF-8
# automatic
?F = $(notdir $?)
# makefile (from 'Makefile', line 5)
NAME = policy-agent
# environment
XDG_CURRENT_DESKTOP = Unity
# makefile (from 'Makefile', line 6)
IMG = $(NAME)
# environment
LS_COLORS = rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:
# automatic
+F = $(notdir $+)
# environment
LESS = -R
# environment
DESKTOP_SESSION = ubuntu
# environment
ORIGINAL_XDG_CURRENT_DESKTOP = Unity
# 'override' directive
GNUMAKEFLAGS := 
# environment
LOGNAME = waleed
# environment
GIO_LAUNCHED_DESKTOP_FILE = /usr/share/applications/terminator.desktop
# environment
SNAP_ARCH = amd64
# makefile
.DEFAULT_GOAL := version
# environment
SYSTEMD_EXEC_PID = 6087
# environment
DISPLAY = :1
# environment
USER = waleed
# environment
GTK_MODULES = gail:atk-bridge
# default
MAKE_VERSION := 4.3
# 'override' directive
.SHELLSTATUS := 0
# environment
DISABLE_WAYLAND = 1
# environment
SNAP_DATA = /var/snap/code/105
# environment
SNAP_CONTEXT = ggH86ha55DAkeI1LEQH5vMWKojgvvXixo2mCjWTTzyy5fVvz8e5M
# environment
MANAGERPID = 5830
# environment
LC_MEASUREMENT = en_US.UTF-8
# environment
GIO_LAUNCHED_DESKTOP_FILE_PID = 8987
# environment
PAGER = less
# environment
LC_PAPER = en_US.UTF-8
# environment
XDG_RUNTIME_DIR = /run/user/1000
# environment
GPG_AGENT_INFO = /run/user/1000/gnupg/S.gpg-agent:0:1
# environment
COLORTERM = truecolor
# environment
GDK_PIXBUF_MODULE_FILE = /home/waleed/snap/code/common/.cache/gdk-pixbuf-loaders.cache
# environment
JOURNAL_STREAM = 8:46742
# environment
GOMODCACHE = /home/waleed/Go/pkg/mod
# environment
XDG_SESSION_CLASS = user
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
 
# environment
HOME = /home/waleed
# environment
QT_IM_MODULE = ibus
# makefile (from 'Makefile', line 139)
ENVTEST = $(shell pwd)/bin/setup-envtest
# environment
ELECTRON_RUN_AS_NODE = 1
# environment
VSCODE_IPC_HOOK = /run/user/1000/vscode-9b8e0266-1.70.2-main.sock
# environment
TERM = xterm-256color
# environment
SNAP_NAME = code
# environment
GSETTINGS_SCHEMA_DIR = /snap/code/105/usr/share/glib-2.0/schemas
# environment
IM_CONFIG_PHASE = 1
# environment
PAPERSIZE = letter
# environment
GOPROXY = https://proxy.golang.org,direct
# default
.RECIPEPREFIX := 
# automatic
<F = $(notdir $<)
# environment
SNAP_VERSION = e4503b30
# default
SUFFIXES := 
# environment
VSCODE_CLI = 1
# environment
ELECTRON_NO_ATTACH_CONSOLE = 1
# environment
VTE_VERSION = 6800
# environment
SNAP_COMMON = /var/snap/code/common
# default
.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell nocomment grouped-target extra-prereqs archives jobserver output-sync check-symlink load
# environment
SNAP_USER_DATA = /home/waleed/snap/code/105
# environment
XDG_MENU_PREFIX = gnome-
# environment
TERM_PROGRAM_VERSION = 1.70.2
# makefile (from 'Makefile', line 161)
go-get-tool = @[ -f $(1) ] || { set -e ; TMP_DIR=$$(mktemp -d) ; cd $$TMP_DIR ; go mod init tmp ; echo "Downloading $(2)" ; GOBIN=$(PROJECT_DIR)/bin go install $(2) ; rm -rf $$TMP_DIR ; }
# environment
GDMSESSION = ubuntu
# environment
LC_IDENTIFICATION = en_US.UTF-8
# environment
SNAP_LIBRARY_PATH = /var/lib/snapd/lib/gl:/var/lib/snapd/lib/gl32:/var/lib/snapd/void
# variable set hash-table stats:
# Load=162/1024=16%, Rehash=0, Collisions=9/215=4%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# . (device 66306, inode 3420695): 22 files, no impossibilities.

# 22 files, no impossibilities in 1 directories.

# Implicit Rules

push@%:
#  recipe to execute (from 'Makefile', line 145):
	$(eval VERSION ?= latest)
	$(eval TAG ?= $*/$(NAME):$(VERSION))
	@echo :: pushing image $(NAME):$(VERSION)
	@docker tag $(NAME):$(VERSION) $(TAG)
	@docker push $(TAG)
	@if [[ "$(tag-file)" ]]; then echo "$(TAG)" > "$(tag-file)"; fi
	@if [[ "$(version-file)" ]]; then echo "$(VERSION)" > "$(version-file)"; fi

# 1 implicit rules, 0 (0.0%) terminal.
# Files

deploy: manifests kustomize
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 122):
	cd config/manager && $(KUSTOMIZE) edit set image controller=${IMG}
	$(KUSTOMIZE) build config/default | kubectl apply -f -

generate: controller-gen
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/10=0%
#  recipe to execute (from 'Makefile', line 61):
	cd api && $(CONTROLLER_GEN) object:headerFile="../hack/boilerplate.go.txt" paths="./..."

undeploy:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 127):
	$(KUSTOMIZE) build config/default | kubectl delete --ignore-not-found=$(ignore-not-found) -f -

# Not a target:
Makefile:
#  Implicit rule search has been done.
#  Last modified 2022-08-06 17:39:49.203964664
#  File has been updated.
#  Successfully updated.

version:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 17):
	@echo $(VERSION)

kustomize:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 137):
	$(call go-get-tool,$(KUSTOMIZE),sigs.k8s.io/kustomize/kustomize/v3@v3.8.7)

mock:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 156):
	mockgen -package mock -destination internal/entities/mock/mock.go github.com/MagalixTechnologies/policy-core/domain EntitiesSource

uninstall: manifests kustomize
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 118):
	$(KUSTOMIZE) build config/crd | kubectl delete --ignore-not-found=$(ignore-not-found) -f -

envtest:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 142):
	$(call go-get-tool,$(ENVTEST),sigs.k8s.io/controller-runtime/tools/setup-envtest@latest)

# 'override' directive
controller-gen: .SHELLSTATUS := 0
controller-gen:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  Implicit/static pattern stem: ''
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# automatic
# @ := controller-gen
# automatic
# * := 
# automatic
# < := 
# automatic
# + := 
# automatic
# % := 
# automatic
# ^ := 
# automatic
# ? := 
# automatic
# | := 
# variable set hash-table stats:
# Load=9/32=28%, Rehash=0, Collisions=2/19=11%
#  recipe to execute (from 'Makefile', line 132):
	$(call go-get-tool,$(CONTROLLER_GEN),sigs.k8s.io/controller-tools/cmd/controller-gen@v0.8.0)

fmt:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 65):
	go fmt ./...

manifests: controller-gen
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 56):
	cd api && $(CONTROLLER_GEN) rbac:roleName=manager-role crd webhook paths="./..." output:crd:artifacts:config=../config/crd/bases
	cp config/crd/bases/pac.weave.works_policies.yaml helm/crds

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

all: build
#  Phony target (prerequisite of .PHONY).
#  Command line target.
#  Implicit rule search has not been done.
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/10=0%

run: manifests generate fmt vet
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 87):
	go run ./main.go

help:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 50):
	@awk 'BEGIN {FS = ":.*##"; printf "\nUsage:\n  make \033[36m<target>\033[0m\n"} /^[a-zA-Z_0-9-]+:.*?##/ { printf "  \033[36m%-15s\033[0m %s\n", $$1, $$2 } /^##@/ { printf "\n\033[1m%s\033[0m\n", substr($$0, 5) } ' $(MAKEFILE_LIST)

vet:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 69):
	go vet ./...

build: generate fmt vet
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/10=0%
#  recipe to execute (from 'Makefile', line 79):
	@go get -v -d
	@rm -rf bin/agent
	CGO_ENABLED=0 GOOS=linux go build -o bin/agent \
		-ldflags "-X main.build=$(VERSION)" \
		-gcflags "-trimpath $(GOPATH)/src"

grype_scan:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 102):
	@echo :: scanning image $(NAME):$(VERSION)
	@curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b /usr/local/bin
	@grype "$(NAME):$(VERSION)" --scope all-layers > ./report.txt #--fail-on high to fail on sev high

test: manifests generate fmt vet envtest
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 73):
	KUBEBUILDER_ASSETS="$(shell $(ENVTEST) use $(ENVTEST_K8S_VERSION) -p path)" go test ./... -coverprofile cover.out

image:
#  Implicit rule search has not been done.
#  Modification time never checked.
 
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 99):
	@echo :: building image $(NAME):$(VERSION)
	@docker build -t $(NAME):$(VERSION) -f Dockerfile .

docker-push:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 96):
	docker push ${IMG}:${VERSION}

install: manifests kustomize
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 114):
	$(KUSTOMIZE) build config/crd | kubectl apply -f -

docker-build: test
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 91):
	@echo :: building image $(IMG):$(VERSION)
	docker build -t ${IMG}:${VERSION} .

# Not a target:
.SUFFIXES:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

.PHONY: version all help manifests generate fmt vet test build run docker-build docker-push install uninstall deploy undeploy controller-gen kustomize envtest mock
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# files hash-table stats:
# Load=26/1024=3%, Rehash=0, Collisions=1/118=1%
# VPATH Search Paths

# No 'vpath' search paths.

# No general ('VPATH' variable) search path.

# strcache buffers: 1 (0) / strings = 50 / storage = 398 B / avg = 7 B
# current buf: size = 8162 B / used = 398 B / count = 50 / avg = 7 B

# strcache performance: lookups = 159 / hit rate = 68%
# hash-table stats:
# Load=50/8192=1%, Rehash=0, Collisions=0/159=0%
# Finished Make data base on Sun Aug 21 16:38:56 2022

 
