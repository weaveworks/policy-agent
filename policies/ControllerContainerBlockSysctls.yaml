apiVersion: pac.weave.works/v2beta3
kind: Policy
metadata:
  name: weave.policies.container-block-sysctl
spec:
  id: weave.policies.container-block-sysctl
  name: Container Block Sysctls
  enabled: true
  description: "Setting sysctls can allow containers unauthorized escalated privileges to a Kubernetes node. \n"
  how_to_solve: "You should not set  `securityContext.sysctls` \n```\n...\n  spec:\n    securityContext:\n      sysctls\n```\nhttps://kubernetes.io/docs/tasks/configure-pod-container/security-context/\n"
  category: weave.categories.pod-security
  severity: high
  targets: {kinds: [Deployment, Job, ReplicationController, ReplicaSet, DaemonSet, StatefulSet, CronJob]}
  standards:
    - id: weave.standards.pci-dss
      controls:
        - weave.controls.pci-dss.2.2.4
        - weave.controls.pci-dss.2.2.5
    - id: weave.standards.cis-benchmark
      controls:
        - weave.controls.cis-benchmark.5.2.6
    - id: weave.standards.mitre-attack
      controls:
        - weave.controls.mitre-attack.4.1
    - id: weave.standards.nist-800-190
      controls:
        - weave.controls.nist-800-190.3.3.1
    - id: weave.standards.gdpr
      controls:
        - weave.controls.gdpr.24
        - weave.controls.gdpr.25
        - weave.controls.gdpr.32
  tags: [pci-dss, cis-benchmark, mitre-attack, nist800-190, gdpr, default]
  parameters:
    - name: exclude_namespaces
      type: array
      required: false
      value: [kube-system]
    - name: exclude_label_key
      type: string
      required: false
      value:
    - name: exclude_label_value
      type: string
      required: false
      value:
  code: |
    package weave.advisor.podSecurity.block_sysctls

    import future.keywords.in

    exclude_namespaces := input.parameters.exclude_namespaces
    exclude_label_key := input.parameters.exclude_label_key
    exclude_label_value := input.parameters.exclude_label_value

    violation[result] {
    	isExcludedNamespace == false
    	not exclude_label_value == controller_input.metadata.labels[exclude_label_key]
        controller_spec.securityContext.sysctls
    	result = {
    		"issue detected": true,
    		"msg": "Adding sysctls could lead to unauthorized escalated privileges to the underlying node",
    		"violating_key": "spec.template.spec.securityContext.sysctls"
    	}
    }

    ###### Functions
    isArrayContains(array, str) {
    	array[_] = str
    }

    # Initial Setup
    controller_input = input.review.object

    controller_spec = controller_input.spec.template.spec {
    	isArrayContains({"StatefulSet", "DaemonSet", "Deployment", "Job", "ReplicaSet"}, controller_input.kind)
    } else = controller_input.spec {
    	controller_input.kind == "Pod"
    } else = controller_input.spec.jobTemplate.spec.template.spec {
    	controller_input.kind == "CronJob"
    }

    isExcludedNamespace = true {
    	controller_input.metadata.namespace
    	controller_input.metadata.namespace in exclude_namespaces
    } else = false
